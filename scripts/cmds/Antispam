module.exports = {
  config: {
    name: "antispam",
    version: "1.0",
    author: "Evariste ᎬᏉᎯᏒᎨᏕᎿᎬ",
    description: "Supprime automatiquement les spammeurs qui envoient de longs messages",
    usage: "[on/off/status]",
    cooldown: 5,
    permissions: [2],
  },

  onStart: async function ({ api, event, args, threadsData }) {
    const { threadID, messageID, senderID } = event;
    const botAdmins = global.GoatBot.config?.adminBot || [];
    if (!botAdmins.includes(senderID)) {
      return api.sendMessage("🔒 Seuls les administrateurs du bot peuvent activer l’anti-spam.", threadID, messageID);
    }

    const action = args[0]?.toLowerCase();
    const current = await threadsData.get(threadID, "antiSpamActive") || false;

    if (!action || action === "status") {
      return api.sendMessage(
        `🛡️ Anti-spam : ${current ? "ACTIF" : "INACTIF"}\n• Supprime les messages > 100 caractères\n\nUtilisation : /antispam on | off | status`,
        threadID,
        messageID
      );
    }

    if (action === "on") {
      await threadsData.set(threadID, true, "antiSpamActive");
      return api.sendMessage("✅ Anti-spam ACTIVÉ\nLes spammeurs seront supprimés automatiquement.\n\nᎬᏉᎯᏒᎨᏕᎿᎬ", threadID, messageID);
    }

    if (action === "off") {
      await threadsData.set(threadID, false, "antiSpamActive");
      return api.sendMessage("❌ Anti-spam DÉSACTIVÉ\nAucune suppression automatique.\n\nᎬᏉᎯᏒᎨᏕᎿᎬ", threadID, messageID);
    }

    return api.sendMessage("❓ Utilisation : /antispam [on|off|status]", threadID, messageID);
  },

  onEvent: async function ({ api, event, threadsData }) {
    const { threadID, senderID, body } = event;

    if (!body || typeof body !== "string") return;

    const isActive = await threadsData.get(threadID, "antiSpamActive");
    if (!isActive) return;

    const botAdmins = global.GoatBot.config?.adminBot || [];
    if (botAdmins.includes(senderID)) return;

    const isLongMessage = body.length > 100;

    if (isLongMessage) {
      try {
        await api.removeUserFromGroup(senderID, threadID);
        await api.sendMessage(
          `🚫 Un utilisateur a été supprimé pour avoir envoyé un message trop long !\nSigné : ᎬᏉᎯᏒᎨᏕᎿᎬ`,
          threadID
        );
      } catch (err) {
        console.error("Erreur lors de la suppression du spammeur :", err);
      }
    }
  }
};
